{"version":3,"sources":["actionTypes.js","actions.js","components/Dates.js","components/EmployeeInfo.js","components/EmployeeId.js","components/SlipFor.js","components/Header.js","components/PaymentInfo.js","components/LeaveInfo.js","components/SalaryBreakdown.js","convertToWords.js","components/Total.js","assets/edigital_wolf_logo.png","components/CompanyInfo.js","components/NavBar.js","reducer.js","store.js","save.js","App.js","reportWebVitals.js","index.js"],"names":["DATE","COMPANY_PAN","EMPLOYEE_ID","DATE_OF_JOINING","HAS_SEPERATED","DATE_OF_SEPERATION","BANK_NAME","BANK_ACCOUNT_NO","MONTHLY_GROSS","MONTHLY_BASIC","DAYS_MONTH","DAYS_PAYABLE","PAN","OPENING","EARNED","AVAILED","CLOSING","BASIC","CONVEYANCE_ALLOWANCE","INCENTIVE","INCOME_TAX","ARREARS","EMPLOYEE_IDS","EMPLOYEE_ID_ERROR","COMPANY_PAN_ERROR","PAN_ERROR","BANK_NAME_ERROR","BANK_ACCOUNT_NO_ERROR","MONTHLY_BASIC_ERROR","MONTHLY_GROSS_ERROR","DAYS_MONTH_ERROR","DAYS_PAYABLE_ERROR","OPENING_ERROR","EARNED_ERROR","AVAILED_ERROR","CLOSING_ERROR","BASIC_ERROR","CONVEYANCE_ALLOWANCE_ERROR","INCENTIVE_ERROR","INCOME_TAX_ERROR","ARREARS_ERROR","updateEmployeeIdError","value","type","actionTypes","payload","updateCompanyPanError","updatePanError","updateBankNameError","updateBankAccountNoError","updateMonthlyBasicError","updateMonthlyGrossError","updateDaysMonthError","updateDaysPayableError","updateOpeningError","updateEarnedError","updateAvailedError","updateClosingError","updateBasicError","updateConveyanceAllowanceError","updateIncentiveError","updateIncomeTaxError","updateArrearsError","Dates","dateOfJoining","useSelector","state","hasSeperated","dateOfSeperation","dispatch","useDispatch","className","utils","DateFnsUtils","autoOk","variant","inputVariant","margin","id","label","format","onChange","date","KeyboardButtonProps","style","display","height","alignItems","FormControlLabel","control","Checkbox","checked","event","target","name","color","flexGrow","EmployeeInfo","bankName","bankAccountNo","bankNameError","bankAccountNoError","Card","TextField","fullWidth","error","helperText","e","EmployeeId","employeeId","employeeIdError","employeeIds","Autocomplete","freeSolo","disableClearable","options","map","option","renderInput","params","InputProps","SlipFor","DatePicker","views","Header","companyPan","companyPanError","PaymentInfo","daysMonth","daysPayable","monthlyBasic","monthlyGross","pan","daysMonthError","daysPayableError","monthlyBasicError","monthlyGrossError","panError","LeaveInfo","opening","earned","availed","closing","openingError","earnedError","availedError","closingError","SalaryBreakdown","basic","conveyanceAllowance","incentive","incomeTax","arrears","ones","tens","teens","convert_millions","num","Math","floor","convert_thousands","convert_hundreds","convert_tens","convert","Total","totalEarnings","parseFloat","toFixed","totalDeductions","convertToWords","CompanyInfo","src","logo","alt","NavBar","visible","isMobile","classes","onSaveClick","Fab","onClick","PictureAsPdf","extendedIcon","today","Date","initial","store","createStore","action","basicError","conveyanceAllowanceError","incentiveError","incomeTaxError","arrearsError","window","__REDUX_DEVTOOLS_EXTENSION__","getState","length","useStyles","makeStyles","theme","root","spacing","marginRight","App","prevScrollPos","useRef","useState","setVisible","useMediaQuery","useLayoutEffect","handleScroll","current","pageYOffset","addEventListener","removeEventListener","position","bottom","zIndex","right","transition","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43442d43.chunk.js","sourcesContent":["export const DATE = \"DATE\";\r\nexport const COMPANY_PAN = \"COMPANY_PAN\";\r\nexport const EMPLOYEE_ID = \"EMPLOYEE_ID\";\r\nexport const DATE_OF_JOINING = \"DATE_OF_JOINING\";\r\nexport const HAS_SEPERATED = \"HAS_SEPERATED\";\r\nexport const DATE_OF_SEPERATION = \"DATE_OF_SEPERATION\";\r\nexport const BANK_NAME = \"BANK_NAME\";\r\nexport const BANK_ACCOUNT_NO = \"BANK_ACCOUNT_NO\";\r\nexport const MONTHLY_GROSS = \"MONTHLY_GROSS\";\r\nexport const MONTHLY_BASIC = \"MONTHLY_BASIC\";\r\nexport const DAYS_MONTH = \"DAYS_MONTH\";\r\nexport const DAYS_PAYABLE = \"DAYS_PAYABLE\";\r\nexport const PAN = \"PAN\";\r\nexport const OPENING = \"OPENING\";\r\nexport const EARNED = \"EARNED\";\r\nexport const AVAILED = \"AVAILED\";\r\nexport const CLOSING = \"CLOSING\";\r\nexport const BASIC = \"BASIC\";\r\nexport const CONVEYANCE_ALLOWANCE = \"CONVEYANCE_ALLOWANCE\";\r\nexport const INCENTIVE = \"INCENTIVE\";\r\nexport const INCOME_TAX = \"INCOME_TAX\";\r\nexport const ARREARS = \"ARREARS\";\r\nexport const EMPLOYEE_IDS = \"EMPLOYEE_IDS\";\r\n\r\n\r\n// Errors\r\nexport const EMPLOYEE_ID_ERROR = \"EMPLOYEE_ID_ERROR\";\r\nexport const COMPANY_PAN_ERROR = \"COMPANY_PAN_ERROR\";\r\nexport const PAN_ERROR = \"PAN_ERROR\";\r\nexport const BANK_NAME_ERROR = \"BANK_NAME_ERROR\";\r\nexport const BANK_ACCOUNT_NO_ERROR = \"BANK_ACCOUNT_NO_ERROR\";\r\nexport const MONTHLY_BASIC_ERROR = \"MONTHLY_BASIC_ERROR\";\r\nexport const MONTHLY_GROSS_ERROR = \"MONTHLY_GROSS_ERROR\";\r\nexport const DAYS_MONTH_ERROR = \"DAYS_MONTH_ERROR\";\r\nexport const DAYS_PAYABLE_ERROR = \"DAYS_PAYABLE_ERROR\";\r\nexport const OPENING_ERROR = \"OPENING_ERROR\";\r\nexport const EARNED_ERROR = \"EARNED_ERROR\";\r\nexport const AVAILED_ERROR = \"AVAILED_ERROR\";\r\nexport const CLOSING_ERROR = \"CLOSING_ERROR\";\r\nexport const BASIC_ERROR = \"BASIC_ERROR\";\r\nexport const CONVEYANCE_ALLOWANCE_ERROR = \"CONVEYANCE_ALLOWANCE_ERROR\";\r\nexport const INCENTIVE_ERROR = \"INCENTIVE_ERROR\";\r\nexport const INCOME_TAX_ERROR = \"INCOME_TAX_ERROR\";\r\nexport const ARREARS_ERROR = \"ARREARS_ERROR\";","import * as actionTypes from './actionTypes';\r\n\r\nexport function updateDate(value) {\r\n    return {\r\n        type: actionTypes.DATE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateCompanyPan(value) {\r\n    return {\r\n        type: actionTypes.COMPANY_PAN,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateEmployeeId(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_ID,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDateOfJoining(value) {\r\n    return {\r\n        type: actionTypes.DATE_OF_JOINING,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateHasSeperated(value) {\r\n    return {\r\n        type: actionTypes.HAS_SEPERATED,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDateOfSeperation(value) {\r\n    return {\r\n        type: actionTypes.DATE_OF_SEPERATION,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateBankName(value) {\r\n    return {\r\n        type: actionTypes.BANK_NAME,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateBankAccountNo(value) {\r\n    return {\r\n        type: actionTypes.BANK_ACCOUNT_NO,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateMonthlyGross(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_GROSS,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateMonthlyBasic(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_BASIC,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDaysMonth(value) {\r\n    return {\r\n        type: actionTypes.DAYS_MONTH,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDaysPayable(value) {\r\n    return {\r\n        type: actionTypes.DAYS_PAYABLE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updatePan(value) {\r\n    return {\r\n        type: actionTypes.PAN,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateOpening(value) {\r\n    return {\r\n        type: actionTypes.OPENING,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateEarned(value) {\r\n    return {\r\n        type: actionTypes.EARNED,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateAvailed(value) {\r\n    return {\r\n        type: actionTypes.AVAILED,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateClosing(value) {\r\n    return {\r\n        type: actionTypes.CLOSING,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateBasic(value) {\r\n    return {\r\n        type: actionTypes.BASIC,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateConveyanceAllowance(value) {\r\n    return {\r\n        type: actionTypes.CONVEYANCE_ALLOWANCE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateIncentive(value) {\r\n    return {\r\n        type: actionTypes.INCENTIVE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateIncomeTax(value) {\r\n    return {\r\n        type: actionTypes.INCOME_TAX,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateArrears(value) {\r\n    return {\r\n        type: actionTypes.ARREARS,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateEmployeeIds(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_IDS,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n// Errors\r\nexport function updateEmployeeIdError(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_ID_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateCompanyPanError(value) {\r\n    return {\r\n        type: actionTypes.COMPANY_PAN_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updatePanError(value) {\r\n    return {\r\n        type: actionTypes.PAN_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBankNameError(value) {\r\n    return {\r\n        type: actionTypes.BANK_NAME_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBankAccountNoError(value) {\r\n    return {\r\n        type: actionTypes.BANK_ACCOUNT_NO_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateMonthlyBasicError(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_BASIC_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateMonthlyGrossError(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_GROSS_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateDaysMonthError(value) {\r\n    return {\r\n        type: actionTypes.DAYS_MONTH_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateDaysPayableError(value) {\r\n    return {\r\n        type: actionTypes.DAYS_PAYABLE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateOpeningError(value) {\r\n    return {\r\n        type: actionTypes.OPENING_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateEarnedError(value) {\r\n    return {\r\n        type: actionTypes.EARNED_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateAvailedError(value) {\r\n    return {\r\n        type: actionTypes.AVAILED_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateClosingError(value) {\r\n    return {\r\n        type: actionTypes.CLOSING_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBasicError(value) {\r\n    return {\r\n        type: actionTypes.BASIC_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateConveyanceAllowanceError(value) {\r\n    return {\r\n        type: actionTypes.CONVEYANCE_ALLOWANCE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateIncentiveError(value) {\r\n    return {\r\n        type: actionTypes.INCENTIVE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateIncomeTaxError(value) {\r\n    return {\r\n        type: actionTypes.INCOME_TAX_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateArrearsError(value) {\r\n    return {\r\n        type: actionTypes.ARREARS_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport './Dates.css'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateDateOfJoining, updateDateOfSeperation, updateHasSeperated } from '../actions';\r\n\r\nfunction Dates() {\r\n\r\n    const dateOfJoining = useSelector(state => state.dateOfJoining);\r\n    const hasSeperated = useSelector(state => state.hasSeperated);\r\n    const dateOfSeperation = useSelector(state => state.dateOfSeperation);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"Dates\">\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                <KeyboardDatePicker\r\n                    autoOk\r\n                    variant=\"inline\"\r\n                    inputVariant=\"outlined\"\r\n                    margin=\"none\"\r\n                    id=\"date-picker-inline\"\r\n                    label=\"Date of Joining\"\r\n                    format=\"MMM, dd yyyy\"\r\n                    value={dateOfJoining}\r\n                    onChange={(date) => dispatch(updateDateOfJoining(date))}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n\r\n                <div style={{ display: 'flex', height: '70px', alignItems: 'center' }}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={hasSeperated}\r\n                                onChange={(event) => dispatch(updateHasSeperated(event.target.checked))}\r\n                                name=\"Seperated\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Seperated\"\r\n                    />\r\n                    {hasSeperated &&\r\n                        <KeyboardDatePicker style={{ flexGrow: '1' }}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"none\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Date of Seperation\"\r\n                            format=\"MMM, dd yyyy\"\r\n                            value={dateOfSeperation}\r\n                            onChange={(date) => dispatch(updateDateOfSeperation(date))}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />}\r\n                </div>\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dates\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dates from './Dates';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateBankAccountNo, updateBankName } from '../actions';\r\n\r\nfunction EmployeeInfo() {\r\n\r\n    const bankName = useSelector(state => state.bankName);\r\n    const bankAccountNo = useSelector(state => state.bankAccountNo);\r\n\r\n    const bankNameError = useSelector(state => state.bankNameError);\r\n    const bankAccountNoError = useSelector(state => state.bankAccountNoError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Employee Info</p>\r\n            <Dates />\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Bank name\"\r\n                    variant=\"outlined\"\r\n                    value={bankName}\r\n                    error={bankNameError}\r\n                    helperText={bankNameError ? \"Please Enter Bank Name\" : \"\"}\r\n                    onChange={(e) => dispatch(updateBankName(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Bank A/c No\"\r\n                    variant=\"outlined\"\r\n                    value={bankAccountNo}\r\n                    error={bankAccountNoError}\r\n                    helperText={bankAccountNoError ? \"Please Enter Bank A/c No\" : \"\"}\r\n                    onChange={(e) => dispatch(updateBankAccountNo(e.target.value))} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default EmployeeInfo\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateEmployeeId } from '../actions';\r\n\r\nfunction EmployeeId() {\r\n\r\n    const employeeId = useSelector(state => state.employeeId);\r\n    const error = useSelector(state => state.employeeIdError);\r\n    const employeeIds = useSelector(state => state.employeeIds);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Autocomplete\r\n            freeSolo\r\n            id=\"employeeIdAutocomplete\"\r\n            disableClearable\r\n            options={employeeIds.map((option) => option)}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label=\"Employee Id\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    value={employeeId}\r\n                    error={error}\r\n                    helperText={error ? \"Please Enter Employee Id\" : \"\"}\r\n                    onChange={(event) => dispatch(updateEmployeeId(event.target.value))}\r\n                    InputProps={{ ...params.InputProps }}\r\n                />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default EmployeeId\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { updateDate } from '../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction SlipFor() {\r\n    const date = useSelector(state => state.date);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n            <DatePicker\r\n                autoOk\r\n                views={[\"month\", \"year\"]}\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                margin=\"none\"\r\n                fullWidth={true}\r\n                id=\"date-picker-inline\"\r\n                label=\"Payslip For\"\r\n                value={date}\r\n                onChange={(date) => dispatch(updateDate(date))}\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default SlipFor\r\n","import React from 'react';\r\nimport { Card, TextField } from \"@material-ui/core\";\r\nimport EmployeeId from './EmployeeId';\r\nimport SlipFor from './SlipFor';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateCompanyPan } from '../actions';\r\n\r\nfunction Header() {\r\n\r\n    const companyPan = useSelector(state => state.companyPan);\r\n    const error = useSelector(state => state.companyPanError);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <div className=\"horizontal\">\r\n                <SlipFor className=\"horizontalItem\" />\r\n\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    id=\"outlined-basic\"\r\n                    label=\"Company PAN\"\r\n                    variant=\"outlined\"\r\n                    fullWidth={true}\r\n                    value={companyPan}\r\n                    error={error}\r\n                    helperText={error ? \"Please Enter Company PAN\" : \"\"}\r\n                    onChange={(e) => dispatch(updateCompanyPan(e.target.value))} />\r\n            </div>\r\n\r\n            <EmployeeId className=\"employeeId\" />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateDaysMonth, updateDaysPayable, updateMonthlyBasic, updateMonthlyGross, updatePan } from '../actions';\r\n\r\nfunction PaymentInfo() {\r\n    const daysMonth = useSelector(state => state.daysMonth);\r\n    const daysPayable = useSelector(state => state.daysPayable);\r\n    const monthlyBasic = useSelector(state => state.monthlyBasic);\r\n    const monthlyGross = useSelector(state => state.monthlyGross);\r\n    const pan = useSelector(state => state.pan);\r\n\r\n    const daysMonthError = useSelector(state => state.daysMonthError);\r\n    const daysPayableError = useSelector(state => state.daysPayableError);\r\n    const monthlyBasicError = useSelector(state => state.monthlyBasicError);\r\n    const monthlyGrossError = useSelector(state => state.monthlyGrossError);\r\n    const panError = useSelector(state => state.panError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Payment Info</p>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Days Month\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={daysMonth}\r\n                    error={daysMonthError}\r\n                    helperText={daysMonthError ? \"Please Enter Days Month\" : \"\"}\r\n                    onChange={(e) => dispatch(updateDaysMonth(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Days Payable\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={daysPayable}\r\n                    error={daysPayableError}\r\n                    helperText={daysPayableError ? \"Please Enter Days Payable\" : \"\"}\r\n                    onChange={(e) => dispatch(updateDaysPayable(e.target.value))} />\r\n            </div>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Monthly Basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={monthlyBasic}\r\n                    error={monthlyBasicError}\r\n                    helperText={monthlyBasicError ? \"Please Enter Monthly Basic\" : \"\"}\r\n                    onChange={(e) => dispatch(updateMonthlyBasic(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Monthly Gross\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={monthlyGross}\r\n                    error={monthlyGrossError}\r\n                    helperText={monthlyGrossError ? \"Please Enter Monthly Gross\" : \"\"}\r\n                    onChange={(e) => dispatch(updateMonthlyGross(e.target.value))} />\r\n            </div>\r\n\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"PAN\"\r\n                variant=\"outlined\"\r\n                value={pan}\r\n                error={panError}\r\n                helperText={panError ? \"Please Enter PAN\" : \"\"}\r\n                onChange={(e) => dispatch(updatePan(e.target.value))} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PaymentInfo\r\n","import React from 'react';\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateEarned, updateOpening, updateAvailed, updateClosing } from '../actions';\r\n\r\n\r\nfunction LeaveInfo() {\r\n\r\n    const opening = useSelector(state => state.opening);\r\n    const earned = useSelector(state => state.earned);\r\n    const availed = useSelector(state => state.availed);\r\n    const closing = useSelector(state => state.closing);\r\n\r\n    const openingError = useSelector(state => state.openingError);\r\n    const earnedError = useSelector(state => state.earnedError);\r\n    const availedError = useSelector(state => state.availedError);\r\n    const closingError = useSelector(state => state.closingError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Leave Balance</p>\r\n\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Opening\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={opening}\r\n                    error={openingError}\r\n                    helperText={openingError ? \"Please Enter Opening\" : \"\"}\r\n                    onChange={(e) => dispatch(updateOpening(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Earned\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={earned}\r\n                    error={earnedError}\r\n                    helperText={earnedError ? \"Please Enter Earned\" : \"\"}\r\n                    onChange={(e) => dispatch(updateEarned(e.target.value))} />\r\n            </div>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Availed\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={availed}\r\n                    error={availedError}\r\n                    helperText={availedError ? \"Please Enter Availed\" : \"\"}\r\n                    onChange={(e) => dispatch(updateAvailed(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Closing\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={closing}\r\n                    error={closingError}\r\n                    helperText={closingError ? \"Please Enter Closing\" : \"\"}\r\n                    onChange={(e) => dispatch(updateClosing(e.target.value))} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LeaveInfo\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateArrears, updateBasic, updateConveyanceAllowance, updateIncentive, updateIncomeTax } from '../actions';\r\n\r\nfunction SalaryBreakdown() {\r\n\r\n    const basic = useSelector(state => state.basic);\r\n    const conveyanceAllowance = useSelector(state => state.conveyanceAllowance);\r\n    const incentive = useSelector(state => state.incentive);\r\n    const incomeTax = useSelector(state => state.incomeTax);\r\n    const arrears = useSelector(state => state.arrears);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Salary Breakdown</p>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={basic}\r\n                    onChange={(e) => dispatch(updateBasic(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Conveyance Allowance\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={conveyanceAllowance}\r\n                    onChange={(e) => dispatch(updateConveyanceAllowance(e.target.value))} />\r\n            </div>\r\n\r\n            <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Incentive\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={incentive}\r\n                onChange={(e) => dispatch(updateIncentive(e.target.value))} />\r\n\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Income Tax (TDS)\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={incomeTax}\r\n                    onChange={(e) => dispatch(updateIncomeTax(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Arrears\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={arrears}\r\n                    onChange={(e) => dispatch(updateArrears(e.target.value))} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SalaryBreakdown\r\n","var ones = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];\r\nvar tens = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\nvar teens = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n\r\nfunction convert_millions(num) {\r\n    if (num >= 1000000) {\r\n        return convert_millions(Math.floor(num / 1000000)) + \" Million \" + convert_thousands(num % 1000000);\r\n    } else {\r\n        return convert_thousands(num);\r\n    }\r\n}\r\n\r\nfunction convert_thousands(num) {\r\n    if (num >= 1000) {\r\n        return convert_hundreds(Math.floor(num / 1000)) + \" Thousand \" + convert_hundreds(num % 1000);\r\n    } else {\r\n        return convert_hundreds(num);\r\n    }\r\n}\r\n\r\nfunction convert_hundreds(num) {\r\n    if (num > 99) {\r\n        return ones[Math.floor(num / 100)] + \" Hundred \" + convert_tens(num % 100);\r\n    } else {\r\n        return convert_tens(num);\r\n    }\r\n}\r\n\r\nfunction convert_tens(num) {\r\n    if (num < 10) return ones[num];\r\n    else if (num >= 10 && num < 20) return teens[num - 10];\r\n    else {\r\n        return tens[Math.floor(num / 10)] + \" \" + ones[num % 10];\r\n    }\r\n}\r\n\r\nexport default function convert(num) {\r\n    if (num === 0) return \"Zero\";\r\n    else return convert_millions(num);\r\n}","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport convertToWords from '../convertToWords'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Total() {\r\n    const basic = useSelector(state => state.basic);\r\n    const conveyanceAllowance = useSelector(state => state.conveyanceAllowance);\r\n    const incentive = useSelector(state => state.incentive);\r\n    const incomeTax = useSelector(state => state.incomeTax);\r\n    const arrears = useSelector(state => state.arrears);\r\n\r\n    const totalEarnings = ((parseFloat(basic) || 0) + (parseFloat(conveyanceAllowance) || 0) + (parseFloat(incentive) || 0)).toFixed(2)\r\n    const totalDeductions = ((parseFloat(incomeTax) || 0) + (parseFloat(arrears) || 0)).toFixed(2)\r\n    return (\r\n        <Card className=\"card\">\r\n            <div className=\"horizontal\">\r\n                <div className=\"info\">\r\n                    <p className=\"title\">Total Earnings</p>\r\n                    <p className=\"value\">{totalEarnings}</p>\r\n                </div>\r\n\r\n                <div className=\"info\">\r\n                    <p className=\"title\">Total Deductions</p>\r\n                    <p className=\"value\">{totalDeductions}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <p className=\"title\">Net Payable</p>\r\n                <p className=\"value\">{totalEarnings - totalDeductions}</p>\r\n                <p className=\"subValue\">Rupees {convertToWords(totalEarnings - totalDeductions)} Only</p>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Total\r\n","export default __webpack_public_path__ + \"static/media/edigital_wolf_logo.a4b84cc4.png\";","import logo from '../assets/edigital_wolf_logo.png'\r\nimport './companyinfo.css'\r\nimport React from 'react'\r\n\r\nconst CompanyInfo = () => {\r\n    return (\r\n        <div className=\"companyInfo\">\r\n            <img src={logo} className=\"logo\" alt=\"Logo\" />\r\n            <div>\r\n                <h3 className=\"name\">EDigital Wolf</h3>\r\n                <p className=\"address\">Shri Siddhi  Above SBI Bank, Sasane Nagar <br />Hadapsar, Pune, Maharashtra 411028</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyInfo;\r\n","import React from 'react'\r\nimport './NavBar.css'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { PictureAsPdf } from '@material-ui/icons';\r\nimport CompanyInfo from './CompanyInfo';\r\n\r\n\r\nfunction NavBar({ visible, isMobile, classes, onSaveClick }) {\r\n\r\n    return (\r\n        <div className={\"NavBar \" + (visible ? \"NavBar__normal\" : \"NavBar__hidden\")}>\r\n            <CompanyInfo />\r\n            {!isMobile && <Fab onClick={onSaveClick} color=\"primary\" variant=\"extended\">\r\n                <PictureAsPdf className={classes.extendedIcon} />  Save to PDF\r\n            </Fab>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import * as actionTypes from './actionTypes';\r\n\r\nconst today = new Date();\r\nconst initial = {\r\n    date: today,\r\n    companyPan: '',\r\n    employeeId: '',\r\n    dateOfJoining: today,\r\n    hasSeperated: false,\r\n    dateOfSeperation: today,\r\n    bankName: '',\r\n    bankAccountNo: '',\r\n    monthlyGross: '',\r\n    monthlyBasic: '',\r\n    daysMonth: '',\r\n    daysPayable: '',\r\n    pan: '',\r\n    opening: '',\r\n    earned: '',\r\n    availed: '',\r\n    closing: '',\r\n    basic: '',\r\n    conveyanceAllowance: '',\r\n    incentive: '',\r\n    incomeTax: '',\r\n    arrears: '',\r\n    employeeIds: [\r\n        \"2986\",\r\n    ]\r\n}\r\n\r\nexport default function reducer(state = initial, action) {\r\n    switch (action.type) {\r\n        case actionTypes.DATE: return { ...state, date: action.payload }\r\n        case actionTypes.COMPANY_PAN: return { ...state, companyPan: action.payload }\r\n        case actionTypes.EMPLOYEE_ID: return { ...state, employeeId: action.payload }\r\n        case actionTypes.DATE_OF_JOINING: return { ...state, dateOfJoining: action.payload }\r\n        case actionTypes.HAS_SEPERATED: return { ...state, hasSeperated: action.payload }\r\n        case actionTypes.DATE_OF_SEPERATION: return { ...state, dateOfSeperation: action.payload }\r\n        case actionTypes.BANK_NAME: return { ...state, bankName: action.payload }\r\n        case actionTypes.BANK_ACCOUNT_NO: return { ...state, bankAccountNo: action.payload }\r\n        case actionTypes.MONTHLY_GROSS: return { ...state, monthlyGross: action.payload }\r\n        case actionTypes.MONTHLY_BASIC: return { ...state, monthlyBasic: action.payload }\r\n        case actionTypes.DAYS_MONTH: return { ...state, daysMonth: action.payload }\r\n        case actionTypes.DAYS_PAYABLE: return { ...state, daysPayable: action.payload }\r\n        case actionTypes.PAN: return { ...state, pan: action.payload }\r\n        case actionTypes.OPENING: return { ...state, opening: action.payload }\r\n        case actionTypes.EARNED: return { ...state, earned: action.payload }\r\n        case actionTypes.AVAILED: return { ...state, availed: action.payload }\r\n        case actionTypes.CLOSING: return { ...state, closing: action.payload }\r\n        case actionTypes.BASIC: return { ...state, basic: action.payload }\r\n        case actionTypes.CONVEYANCE_ALLOWANCE: return { ...state, conveyanceAllowance: action.payload }\r\n        case actionTypes.INCENTIVE: return { ...state, incentive: action.payload }\r\n        case actionTypes.INCOME_TAX: return { ...state, incomeTax: action.payload }\r\n        case actionTypes.ARREARS: return { ...state, arrears: action.payload }\r\n        case actionTypes.EMPLOYEE_IDS: return { ...state, employeeIds: action.payload }\r\n\r\n        // Errors\r\n        case actionTypes.EMPLOYEE_ID_ERROR: return { ...state, employeeIdError: action.payload }\r\n        case actionTypes.COMPANY_PAN_ERROR: return { ...state, companyPanError: action.payload }\r\n        case actionTypes.PAN_ERROR: return { ...state, panError: action.payload }\r\n        case actionTypes.BANK_NAME_ERROR: return { ...state, bankNameError: action.payload }\r\n        case actionTypes.BANK_ACCOUNT_NO_ERROR: return { ...state, bankAccountNoError: action.payload }\r\n        case actionTypes.MONTHLY_BASIC_ERROR: return { ...state, monthlyBasicError: action.payload }\r\n        case actionTypes.MONTHLY_GROSS_ERROR: return { ...state, monthlyGrossError: action.payload }\r\n        case actionTypes.DAYS_MONTH_ERROR: return { ...state, daysMonthError: action.payload }\r\n        case actionTypes.DAYS_PAYABLE_ERROR: return { ...state, daysPayableError: action.payload }\r\n        case actionTypes.OPENING_ERROR: return { ...state, openingError: action.payload }\r\n        case actionTypes.EARNED_ERROR: return { ...state, earnedError: action.payload }\r\n        case actionTypes.AVAILED_ERROR: return { ...state, availedError: action.payload }\r\n        case actionTypes.CLOSING_ERROR: return { ...state, closingError: action.payload }\r\n        case actionTypes.BASIC_ERROR: return { ...state, basicError: action.payload }\r\n        case actionTypes.CONVEYANCE_ALLOWANCE_ERROR: return { ...state, conveyanceAllowanceError: action.payload }\r\n        case actionTypes.INCENTIVE_ERROR: return { ...state, incentiveError: action.payload }\r\n        case actionTypes.INCOME_TAX_ERROR: return { ...state, incomeTaxError: action.payload }\r\n        case actionTypes.ARREARS_ERROR: return { ...state, arrearsError: action.payload }\r\n        default: return { ...initial };\r\n    }\r\n}","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    +  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import store from './store';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    updateEmployeeIdError,\r\n    updateCompanyPanError,\r\n    updatePanError,\r\n    updateBankNameError,\r\n    updateBankAccountNoError,\r\n    updateMonthlyBasicError,\r\n    updateMonthlyGrossError,\r\n    updateDaysMonthError,\r\n    updateDaysPayableError,\r\n    updateOpeningError,\r\n    updateEarnedError,\r\n    updateAvailedError,\r\n    updateClosingError,\r\n    updateBasicError,\r\n    updateConveyanceAllowanceError,\r\n    updateIncentiveError,\r\n    updateIncomeTaxError,\r\n    updateArrearsError\r\n} from './actions';\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const state = store.getState();\r\n\r\n    if (state.companyPan.length === 0) {\r\n        dispatch(updateCompanyPanError(true));\r\n        return;\r\n    }\r\n    dispatch(updateCompanyPanError(false));\r\n\r\n    if (state.employeeId.length === 0) {\r\n        dispatch(updateEmployeeIdError(true));\r\n        return;\r\n    }\r\n    dispatch(updateEmployeeIdError(false));\r\n\r\n    if (state.bankName.length === 0) {\r\n        dispatch(updateBankNameError(true));\r\n        return;\r\n    }\r\n    dispatch(updateBankNameError(false));\r\n\r\n    if (state.bankAccountNo.length === 0) {\r\n        dispatch(updateBankAccountNoError(true));\r\n        return;\r\n    }\r\n    dispatch(updateBankAccountNoError(false));\r\n\r\n    if (state.daysMonth.length === 0) {\r\n        dispatch(updateDaysMonthError(true));\r\n        return;\r\n    }\r\n    dispatch(updateDaysMonthError(false));\r\n\r\n    if (state.daysPayable.length === 0) {\r\n        dispatch(updateDaysPayableError(true));\r\n        return;\r\n    }\r\n    dispatch(updateDaysPayableError(false));\r\n\r\n    if (state.monthlyBasic.length === 0) {\r\n        dispatch(updateMonthlyBasicError(true));\r\n        return;\r\n    }\r\n    dispatch(updateMonthlyBasicError(false));\r\n\r\n    if (state.monthlyGross.length === 0) {\r\n        dispatch(updateMonthlyGrossError(true));\r\n        return;\r\n    }\r\n    dispatch(updateMonthlyGrossError(false));\r\n\r\n\r\n    if (state.pan.length === 0) {\r\n        dispatch(updatePanError(true));\r\n        return;\r\n    }\r\n    dispatch(updatePanError(false));\r\n\r\n\r\n    if (state.opening.length === 0) {\r\n        dispatch(updateOpeningError(true));\r\n        return;\r\n    }\r\n    dispatch(updateOpeningError(false));\r\n\r\n    if (state.earned.length === 0) {\r\n        dispatch(updateEarnedError(true));\r\n        return;\r\n    }\r\n    dispatch(updateEarnedError(false));\r\n\r\n    if (state.availed.length === 0) {\r\n        dispatch(updateAvailedError(true));\r\n        return;\r\n    }\r\n    dispatch(updateAvailedError(false));\r\n\r\n    if (state.closing.length === 0) {\r\n        dispatch(updateClosingError(true));\r\n        return;\r\n    }\r\n    dispatch(updateClosingError(false));\r\n\r\n    if (state.basic.length === 0) {\r\n        dispatch(updateBasicError(true));\r\n        return;\r\n    }\r\n    dispatch(updateBasicError(false));\r\n\r\n    if (state.conveyanceAllowance.length === 0) {\r\n        dispatch(updateConveyanceAllowanceError(true));\r\n        return;\r\n    }\r\n    dispatch(updateConveyanceAllowanceError(false));\r\n\r\n    if (state.incentive.length === 0) {\r\n        dispatch(updateIncentiveError(true));\r\n        return;\r\n    }\r\n    dispatch(updateIncentiveError(false));\r\n\r\n    if (state.incomeTax.length === 0) {\r\n        dispatch(updateIncomeTaxError(true));\r\n        return;\r\n    }\r\n    dispatch(updateIncomeTaxError(false));\r\n\r\n    if (state.arrears.length === 0) {\r\n        dispatch(updateArrearsError(true));\r\n        return;\r\n    }\r\n    dispatch(updateArrearsError(false));\r\n\r\n}","import './App.css';\nimport React, { Fragment, useLayoutEffect, useRef, useState } from 'react';\nimport 'date-fns';\nimport EmployeeInfo from './components/EmployeeInfo';\nimport Header from './components/Header';\nimport PaymentInfo from './components/PaymentInfo';\nimport LeaveInfo from './components/LeaveInfo';\nimport SalaryBreakdown from './components/SalaryBreakdown';\nimport Total from './components/Total';\nimport NavBar from './components/NavBar';\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab'\nimport { PictureAsPdf } from '@material-ui/icons';\nimport onSaveClick from './save';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  let prevScrollPos = useRef(0)\n  const [visible, setVisible] = useState(true);\n\n  const isMobile = useMediaQuery(\"(max-width: 500px)\")\n\n  useLayoutEffect(() => {\n    const handleScroll = () => {\n      const current = window.pageYOffset;\n      setVisible(prevScrollPos.current > current);\n      prevScrollPos.current = current;\n    }\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [])\n\n\n  return (\n    <Fragment>\n      <div className=\"App\">\n        <NavBar visible={visible} isMobile={isMobile} classes={classes} onSaveClick={onSaveClick} />\n        <div className=\"Container\">\n          <Header />\n          <EmployeeInfo />\n          <PaymentInfo />\n          <LeaveInfo />\n          <SalaryBreakdown />\n          <Total />\n          {\n            isMobile && <Fab onClick={onSaveClick}\n              style={{ position: \"fixed\", bottom: \"20px\", zIndex: \"10\", right: \"20px\", transition: \"transform 300ms\", transform: visible ? \"translateY(0%)\" : \"translateY(150%)\" }} color=\"primary\" variant=\"extended\">\n              <PictureAsPdf className={classes.extendedIcon} />  Save to PDF\n            </Fab>\n          }\n\n        </div>\n      </div>\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}