{"version":3,"sources":["actionTypes.js","actions.js","components/Dates.js","components/EmployeeInfo.js","components/EmployeeId.js","components/SlipFor.js","components/Header.js","components/PaymentInfo.js","components/LeaveInfo.js","components/SalaryBreakdown.js","convertToWords.js","components/Total.js","assets/edigital_wolf_logo.png","components/CompanyInfo.js","components/NavBar.js","reducer.js","store.js","firebase.js","generateDoc.js","save.js","App.js","reportWebVitals.js","index.js"],"names":["DATE","COMPANY_PAN","EMPLOYEE_ID","DATE_OF_JOINING","HAS_SEPERATED","DATE_OF_SEPERATION","BANK_NAME","BANK_ACCOUNT_NO","MONTHLY_GROSS","MONTHLY_BASIC","DAYS_MONTH","DAYS_PAYABLE","PAN","OPENING","EARNED","AVAILED","CLOSING","BASIC","CONVEYANCE_ALLOWANCE","INCENTIVE","INCOME_TAX","ARREARS","EMPLOYEE_IDS","EMPLOYEE_INFO","EMPLOYEE_ID_ERROR","COMPANY_PAN_ERROR","PAN_ERROR","BANK_NAME_ERROR","BANK_ACCOUNT_NO_ERROR","MONTHLY_BASIC_ERROR","MONTHLY_GROSS_ERROR","DAYS_MONTH_ERROR","DAYS_PAYABLE_ERROR","OPENING_ERROR","EARNED_ERROR","AVAILED_ERROR","CLOSING_ERROR","BASIC_ERROR","CONVEYANCE_ALLOWANCE_ERROR","INCENTIVE_ERROR","INCOME_TAX_ERROR","ARREARS_ERROR","updateEmployeeId","value","type","actionTypes","payload","updateEmployeeIdError","updateCompanyPanError","updatePanError","updateBankNameError","updateBankAccountNoError","updateMonthlyBasicError","updateMonthlyGrossError","updateDaysMonthError","updateDaysPayableError","updateOpeningError","updateEarnedError","updateAvailedError","updateClosingError","updateBasicError","updateConveyanceAllowanceError","updateIncentiveError","updateIncomeTaxError","updateArrearsError","Dates","dateOfJoining","useSelector","state","hasSeperated","dateOfSeperation","dispatch","useDispatch","className","utils","DateFnsUtils","autoOk","variant","inputVariant","margin","id","label","format","onChange","date","KeyboardButtonProps","style","display","height","alignItems","FormControlLabel","control","Checkbox","checked","event","target","name","color","flexGrow","EmployeeInfo","bankName","bankAccountNo","bankNameError","bankAccountNoError","Card","TextField","fullWidth","error","helperText","e","EmployeeId","employeeId","employeeIdError","employeeIds","Autocomplete","freeSolo","disableClearable","options","getOptionLabel","option","newValue","data","pan","parse","Date","monthlyGross","monthlyBasic","basic","conveyanceAllowance","incentive","incomeTax","arrears","renderInput","params","InputProps","SlipFor","DatePicker","views","Header","companyPan","companyPanError","PaymentInfo","daysMonth","daysPayable","daysMonthError","daysPayableError","monthlyBasicError","monthlyGrossError","panError","autoComplete","LeaveInfo","opening","earned","availed","closing","openingError","earnedError","availedError","closingError","SalaryBreakdown","ones","tens","teens","convert_millions","num","Math","floor","convert_thousands","convert_hundreds","convert_tens","convert","Total","totalEarnings","parseFloat","toFixed","totalDeductions","convertToWords","CompanyInfo","src","logo","alt","NavBar","visible","isMobile","classes","onSaveClick","Fab","onClick","PictureAsPdf","extendedIcon","today","initial","getFullYear","getMonth","getDate","toString","store","createStore","action","basicError","conveyanceAllowanceError","incentiveError","incomeTaxError","arrearsError","window","__REDUX_DEVTOOLS_EXTENSION__","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","generateDoc","url","callback","content","zip","PizZip","doc","Docxtemplater","loadZip","setData","render","console","log","JSON","stringify","key","Error","Object","getOwnPropertyNames","reduce","properties","errors","Array","errorMessages","map","explanation","join","out","getZip","generate","mimeType","fileName","dateObject","saveAs","collection","set","then","catch","PizZipUtils","getBinaryContent","getState","length","netPayable","useStyles","makeStyles","theme","root","spacing","marginRight","App","prevScrollPos","useRef","useState","setVisible","useMediaQuery","getEmployeeIds","onSnapshot","snapshot","ids","docs","useEffect","useLayoutEffect","handleScroll","current","pageYOffset","addEventListener","removeEventListener","position","bottom","zIndex","right","transition","transform","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3150b3f.chunk.js","sourcesContent":["export const DATE = \"DATE\";\r\nexport const COMPANY_PAN = \"COMPANY_PAN\";\r\nexport const EMPLOYEE_ID = \"EMPLOYEE_ID\";\r\nexport const DATE_OF_JOINING = \"DATE_OF_JOINING\";\r\nexport const HAS_SEPERATED = \"HAS_SEPERATED\";\r\nexport const DATE_OF_SEPERATION = \"DATE_OF_SEPERATION\";\r\nexport const BANK_NAME = \"BANK_NAME\";\r\nexport const BANK_ACCOUNT_NO = \"BANK_ACCOUNT_NO\";\r\nexport const MONTHLY_GROSS = \"MONTHLY_GROSS\";\r\nexport const MONTHLY_BASIC = \"MONTHLY_BASIC\";\r\nexport const DAYS_MONTH = \"DAYS_MONTH\";\r\nexport const DAYS_PAYABLE = \"DAYS_PAYABLE\";\r\nexport const PAN = \"PAN\";\r\nexport const OPENING = \"OPENING\";\r\nexport const EARNED = \"EARNED\";\r\nexport const AVAILED = \"AVAILED\";\r\nexport const CLOSING = \"CLOSING\";\r\nexport const BASIC = \"BASIC\";\r\nexport const CONVEYANCE_ALLOWANCE = \"CONVEYANCE_ALLOWANCE\";\r\nexport const INCENTIVE = \"INCENTIVE\";\r\nexport const INCOME_TAX = \"INCOME_TAX\";\r\nexport const ARREARS = \"ARREARS\";\r\nexport const EMPLOYEE_IDS = \"EMPLOYEE_IDS\";\r\n\r\nexport const EMPLOYEE_INFO = \"EMPLOYEE_INFO\";\r\n\r\n// Errors\r\nexport const EMPLOYEE_ID_ERROR = \"EMPLOYEE_ID_ERROR\";\r\nexport const COMPANY_PAN_ERROR = \"COMPANY_PAN_ERROR\";\r\nexport const PAN_ERROR = \"PAN_ERROR\";\r\nexport const BANK_NAME_ERROR = \"BANK_NAME_ERROR\";\r\nexport const BANK_ACCOUNT_NO_ERROR = \"BANK_ACCOUNT_NO_ERROR\";\r\nexport const MONTHLY_BASIC_ERROR = \"MONTHLY_BASIC_ERROR\";\r\nexport const MONTHLY_GROSS_ERROR = \"MONTHLY_GROSS_ERROR\";\r\nexport const DAYS_MONTH_ERROR = \"DAYS_MONTH_ERROR\";\r\nexport const DAYS_PAYABLE_ERROR = \"DAYS_PAYABLE_ERROR\";\r\nexport const OPENING_ERROR = \"OPENING_ERROR\";\r\nexport const EARNED_ERROR = \"EARNED_ERROR\";\r\nexport const AVAILED_ERROR = \"AVAILED_ERROR\";\r\nexport const CLOSING_ERROR = \"CLOSING_ERROR\";\r\nexport const BASIC_ERROR = \"BASIC_ERROR\";\r\nexport const CONVEYANCE_ALLOWANCE_ERROR = \"CONVEYANCE_ALLOWANCE_ERROR\";\r\nexport const INCENTIVE_ERROR = \"INCENTIVE_ERROR\";\r\nexport const INCOME_TAX_ERROR = \"INCOME_TAX_ERROR\";\r\nexport const ARREARS_ERROR = \"ARREARS_ERROR\";","import * as actionTypes from './actionTypes';\r\nimport { parse } from 'date-fns';\r\n\r\nexport function updateDate(value) {\r\n    return {\r\n        type: actionTypes.DATE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateCompanyPan(value) {\r\n    return {\r\n        type: actionTypes.COMPANY_PAN,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateEmployeeId(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_ID,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDateOfJoining(value) {\r\n    return {\r\n        type: actionTypes.DATE_OF_JOINING,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateHasSeperated(value) {\r\n    return {\r\n        type: actionTypes.HAS_SEPERATED,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDateOfSeperation(value) {\r\n    return {\r\n        type: actionTypes.DATE_OF_SEPERATION,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateBankName(value) {\r\n    return {\r\n        type: actionTypes.BANK_NAME,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateBankAccountNo(value) {\r\n    return {\r\n        type: actionTypes.BANK_ACCOUNT_NO,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateMonthlyGross(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_GROSS,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateMonthlyBasic(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_BASIC,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDaysMonth(value) {\r\n    return {\r\n        type: actionTypes.DAYS_MONTH,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateDaysPayable(value) {\r\n    return {\r\n        type: actionTypes.DAYS_PAYABLE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updatePan(value) {\r\n    return {\r\n        type: actionTypes.PAN,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateOpening(value) {\r\n    return {\r\n        type: actionTypes.OPENING,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateEarned(value) {\r\n    return {\r\n        type: actionTypes.EARNED,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateAvailed(value) {\r\n    return {\r\n        type: actionTypes.AVAILED,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateClosing(value) {\r\n    return {\r\n        type: actionTypes.CLOSING,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateBasic(value) {\r\n    return {\r\n        type: actionTypes.BASIC,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateConveyanceAllowance(value) {\r\n    return {\r\n        type: actionTypes.CONVEYANCE_ALLOWANCE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateIncentive(value) {\r\n    return {\r\n        type: actionTypes.INCENTIVE,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateIncomeTax(value) {\r\n    return {\r\n        type: actionTypes.INCOME_TAX,\r\n        payload: value\r\n    }\r\n}\r\nexport function updateArrears(value) {\r\n    return {\r\n        type: actionTypes.ARREARS,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateEmployeeIds(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_IDS,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n// Errors\r\nexport function updateEmployeeIdError(value) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_ID_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateCompanyPanError(value) {\r\n    return {\r\n        type: actionTypes.COMPANY_PAN_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updatePanError(value) {\r\n    return {\r\n        type: actionTypes.PAN_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBankNameError(value) {\r\n    return {\r\n        type: actionTypes.BANK_NAME_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBankAccountNoError(value) {\r\n    return {\r\n        type: actionTypes.BANK_ACCOUNT_NO_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateMonthlyBasicError(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_BASIC_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateMonthlyGrossError(value) {\r\n    return {\r\n        type: actionTypes.MONTHLY_GROSS_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateDaysMonthError(value) {\r\n    return {\r\n        type: actionTypes.DAYS_MONTH_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateDaysPayableError(value) {\r\n    return {\r\n        type: actionTypes.DAYS_PAYABLE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateOpeningError(value) {\r\n    return {\r\n        type: actionTypes.OPENING_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateEarnedError(value) {\r\n    return {\r\n        type: actionTypes.EARNED_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateAvailedError(value) {\r\n    return {\r\n        type: actionTypes.AVAILED_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateClosingError(value) {\r\n    return {\r\n        type: actionTypes.CLOSING_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateBasicError(value) {\r\n    return {\r\n        type: actionTypes.BASIC_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateConveyanceAllowanceError(value) {\r\n    return {\r\n        type: actionTypes.CONVEYANCE_ALLOWANCE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateIncentiveError(value) {\r\n    return {\r\n        type: actionTypes.INCENTIVE_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateIncomeTaxError(value) {\r\n    return {\r\n        type: actionTypes.INCOME_TAX_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateArrearsError(value) {\r\n    return {\r\n        type: actionTypes.ARREARS_ERROR,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function updateEmployeeInfo(data) {\r\n    return {\r\n        type: actionTypes.EMPLOYEE_INFO,\r\n        payload: {\r\n            pan: data.pan,\r\n            bankName: data.bankName,\r\n            bankAccountNo: data.bankAccountNo,\r\n            dateOfJoining: parse(data.dateOfJoining, \"dd MMM yyyy\", new Date()),\r\n            hasSeperated: data.dateOfSeperation !== \"N/A\",\r\n            dateOfSeperation: data.dateOfSeperation === \"N/A\" ? new Date() : parse(data.dateOfSeperation, \"dd MMM yyyy\", new Date()),\r\n            monthlyGross: data.monthlyGross,\r\n            monthlyBasic: data.monthlyBasic,\r\n            basic: data.basic,\r\n            conveyanceAllowance: data.conveyanceAllowance,\r\n            incentive: data.incentive,\r\n            incomeTax: data.incomeTax,\r\n            arrears: data.arrears\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateState() {\r\n    return {\r\n        type: \"STATE\"\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport './Dates.css'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateDateOfJoining, updateDateOfSeperation, updateHasSeperated } from '../actions';\r\n\r\nfunction Dates() {\r\n\r\n    const dateOfJoining = useSelector(state => state.dateOfJoining);\r\n    const hasSeperated = useSelector(state => state.hasSeperated);\r\n    const dateOfSeperation = useSelector(state => state.dateOfSeperation);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"Dates\">\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n                <KeyboardDatePicker\r\n                    autoOk\r\n                    variant=\"inline\"\r\n                    inputVariant=\"outlined\"\r\n                    margin=\"none\"\r\n                    id=\"dateOfJoining\"\r\n                    label=\"Date of Joining\"\r\n                    format=\"MMM, dd yyyy\"\r\n                    value={dateOfJoining}\r\n                    onChange={(date) => dispatch(updateDateOfJoining(date))}\r\n                    KeyboardButtonProps={{\r\n                        'aria-label': 'change date',\r\n                    }}\r\n                />\r\n\r\n                <div style={{ display: 'flex', height: '70px', alignItems: 'center' }}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={hasSeperated}\r\n                                onChange={(event) => dispatch(updateHasSeperated(event.target.checked))}\r\n                                name=\"Seperated\"\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Seperated\"\r\n                    />\r\n                    {hasSeperated &&\r\n                        <KeyboardDatePicker style={{ flexGrow: '1' }}\r\n                            autoOk\r\n                            variant=\"inline\"\r\n                            inputVariant=\"outlined\"\r\n                            margin=\"none\"\r\n                            id=\"dateOfSeperation\"\r\n                            label=\"Date of Seperation\"\r\n                            format=\"MMM, dd yyyy\"\r\n                            value={dateOfSeperation}\r\n                            onChange={(date) => dispatch(updateDateOfSeperation(date))}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />}\r\n                </div>\r\n            </MuiPickersUtilsProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dates\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dates from './Dates';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateBankAccountNo, updateBankName } from '../actions';\r\n\r\nfunction EmployeeInfo() {\r\n\r\n    const bankName = useSelector(state => state.bankName);\r\n    const bankAccountNo = useSelector(state => state.bankAccountNo);\r\n\r\n    const bankNameError = useSelector(state => state.bankNameError);\r\n    const bankAccountNoError = useSelector(state => state.bankAccountNoError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Employee Info</p>\r\n            <Dates />\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"bankName\"\r\n                    label=\"Bank name\"\r\n                    variant=\"outlined\"\r\n                    value={bankName}\r\n                    error={bankNameError}\r\n                    helperText={bankNameError ? \"Please Enter Bank Name\" : \"\"}\r\n                    onChange={(e) => dispatch(updateBankName(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"bankAccountNo\"\r\n                    label=\"Bank A/c No\"\r\n                    variant=\"outlined\"\r\n                    value={bankAccountNo}\r\n                    error={bankAccountNoError}\r\n                    helperText={bankAccountNoError ? \"Please Enter Bank A/c No\" : \"\"}\r\n                    onChange={(e) => dispatch(updateBankAccountNo(e.target.value))} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default EmployeeInfo\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    updateEmployeeId,\r\n    updateEmployeeInfo\r\n} from '../actions';\r\n\r\nfunction EmployeeId() {\r\n\r\n    const employeeId = useSelector(state => state.employeeId);\r\n    const error = useSelector(state => state.employeeIdError);\r\n    const employeeIds = useSelector(state => state.employeeIds);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Autocomplete\r\n            freeSolo\r\n            id=\"employeeIdAutocomplete\"\r\n            disableClearable\r\n            options={employeeIds}\r\n            getOptionLabel={(option) => option.id}\r\n            onChange={(event, newValue) => {\r\n                dispatch(updateEmployeeId(newValue.id));\r\n                dispatch(updateEmployeeInfo(newValue.data));\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label=\"Employee Id\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    value={employeeId}\r\n                    error={error}\r\n                    helperText={error ? \"Please Enter Employee Id\" : \"\"}\r\n                    onChange={(event) => dispatch(updateEmployeeId(event.target.value))}\r\n                    InputProps={{ ...params.InputProps }}\r\n                />\r\n            )}\r\n        />\r\n\r\n    )\r\n}\r\n\r\nexport default EmployeeId\r\n","import React from 'react'\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { updateDate } from '../actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction SlipFor() {\r\n    const date = useSelector(state => state.date);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n            <DatePicker\r\n                autoOk\r\n                views={[\"month\", \"year\"]}\r\n                variant=\"inline\"\r\n                inputVariant=\"outlined\"\r\n                margin=\"none\"\r\n                fullWidth={true}\r\n                id=\"paySlipFor\"\r\n                label=\"Payslip For\"\r\n                value={date}\r\n                onChange={(date) => dispatch(updateDate(date))}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default SlipFor\r\n","import React from 'react';\r\nimport { Card, TextField } from \"@material-ui/core\";\r\nimport EmployeeId from './EmployeeId';\r\nimport SlipFor from './SlipFor';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateCompanyPan } from '../actions';\r\n\r\nfunction Header() {\r\n\r\n    const companyPan = useSelector(state => state.companyPan);\r\n    const error = useSelector(state => state.companyPanError);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <div className=\"horizontal\">\r\n                <SlipFor className=\"horizontalItem\" />\r\n\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    id=\"companyPan\"\r\n                    label=\"Company PAN\"\r\n                    variant=\"outlined\"\r\n                    fullWidth={true}\r\n                    value={companyPan}\r\n                    error={error}\r\n                    helperText={error ? \"Please Enter Company PAN\" : \"\"}\r\n                    onChange={(e) => dispatch(updateCompanyPan(e.target.value))} />\r\n            </div>\r\n\r\n            <EmployeeId className=\"employeeId\" />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateDaysMonth, updateDaysPayable, updateMonthlyBasic, updateMonthlyGross, updatePan } from '../actions';\r\n\r\nfunction PaymentInfo() {\r\n    const daysMonth = useSelector(state => state.daysMonth);\r\n    const daysPayable = useSelector(state => state.daysPayable);\r\n    const monthlyBasic = useSelector(state => state.monthlyBasic);\r\n    const monthlyGross = useSelector(state => state.monthlyGross);\r\n    const pan = useSelector(state => state.pan);\r\n\r\n    const daysMonthError = useSelector(state => state.daysMonthError);\r\n    const daysPayableError = useSelector(state => state.daysPayableError);\r\n    const monthlyBasicError = useSelector(state => state.monthlyBasicError);\r\n    const monthlyGrossError = useSelector(state => state.monthlyGrossError);\r\n    const panError = useSelector(state => state.panError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Payment Info</p>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"daysMonth\"\r\n                    label=\"Days Month\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={daysMonth}\r\n                    error={daysMonthError}\r\n                    helperText={daysMonthError ? \"Please Enter Days Month\" : \"\"}\r\n                    onChange={(e) => dispatch(updateDaysMonth(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"daysPayable\"\r\n                    label=\"Days Payable\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={daysPayable}\r\n                    error={daysPayableError}\r\n                    helperText={daysPayableError ? \"Please Enter Days Payable\" : \"\"}\r\n                    onChange={(e) => dispatch(updateDaysPayable(e.target.value))} />\r\n            </div>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"monthlyBasic\"\r\n                    label=\"Monthly Basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={monthlyBasic}\r\n                    error={monthlyBasicError}\r\n                    helperText={monthlyBasicError ? \"Please Enter Monthly Basic\" : \"\"}\r\n                    onChange={(e) => dispatch(updateMonthlyBasic(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"monthlyGross\"\r\n                    label=\"Monthly Gross\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={monthlyGross}\r\n                    error={monthlyGrossError}\r\n                    helperText={monthlyGrossError ? \"Please Enter Monthly Gross\" : \"\"}\r\n                    onChange={(e) => dispatch(updateMonthlyGross(e.target.value))} />\r\n            </div>\r\n\r\n            <TextField\r\n                id=\"pan\"\r\n                label=\"PAN\"\r\n                variant=\"outlined\"\r\n                value={pan}\r\n                error={panError}\r\n                autoComplete=\"off\"\r\n                helperText={panError ? \"Please Enter PAN\" : \"\"}\r\n                onChange={(e) => dispatch(updatePan(e.target.value))} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PaymentInfo\r\n","import React from 'react';\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateEarned, updateOpening, updateAvailed, updateClosing } from '../actions';\r\n\r\n\r\nfunction LeaveInfo() {\r\n\r\n    const opening = useSelector(state => state.opening);\r\n    const earned = useSelector(state => state.earned);\r\n    const availed = useSelector(state => state.availed);\r\n    const closing = useSelector(state => state.closing);\r\n\r\n    const openingError = useSelector(state => state.openingError);\r\n    const earnedError = useSelector(state => state.earnedError);\r\n    const availedError = useSelector(state => state.availedError);\r\n    const closingError = useSelector(state => state.closingError);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Leave Balance</p>\r\n\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"opening\"\r\n                    label=\"Opening\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={opening}\r\n                    error={openingError}\r\n                    helperText={openingError ? \"Please Enter Opening\" : \"\"}\r\n                    onChange={(e) => dispatch(updateOpening(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"earned\"\r\n                    label=\"Earned\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={earned}\r\n                    error={earnedError}\r\n                    helperText={earnedError ? \"Please Enter Earned\" : \"\"}\r\n                    onChange={(e) => dispatch(updateEarned(e.target.value))} />\r\n            </div>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"availed\"\r\n                    label=\"Availed\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={availed}\r\n                    error={availedError}\r\n                    helperText={availedError ? \"Please Enter Availed\" : \"\"}\r\n                    onChange={(e) => dispatch(updateAvailed(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"closing\"\r\n                    label=\"Closing\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    value={closing}\r\n                    error={closingError}\r\n                    helperText={closingError ? \"Please Enter Closing\" : \"\"}\r\n                    onChange={(e) => dispatch(updateClosing(e.target.value))} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LeaveInfo\r\n","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateArrears, updateBasic, updateConveyanceAllowance, updateIncentive, updateIncomeTax } from '../actions';\r\n\r\nfunction SalaryBreakdown() {\r\n\r\n    const basic = useSelector(state => state.basic);\r\n    const conveyanceAllowance = useSelector(state => state.conveyanceAllowance);\r\n    const incentive = useSelector(state => state.incentive);\r\n    const incomeTax = useSelector(state => state.incomeTax);\r\n    const arrears = useSelector(state => state.arrears);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <p className=\"title\">Salary Breakdown</p>\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"basic\"\r\n                    label=\"Basic\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={basic}\r\n                    onChange={(e) => dispatch(updateBasic(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"outlined-basic\"\r\n                    label=\"Conveyance Allowance\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={conveyanceAllowance}\r\n                    onChange={(e) => dispatch(updateConveyanceAllowance(e.target.value))} />\r\n            </div>\r\n\r\n            <TextField\r\n                id=\"incentive\"\r\n                label=\"Incentive\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                autoComplete=\"off\"\r\n                value={incentive}\r\n                onChange={(e) => dispatch(updateIncentive(e.target.value))} />\r\n\r\n            <div className=\"horizontal\">\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"incomeTax\"\r\n                    label=\"Income Tax (TDS)\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={incomeTax}\r\n                    onChange={(e) => dispatch(updateIncomeTax(e.target.value))} />\r\n                <TextField\r\n                    className=\"horizontalItem\"\r\n                    fullWidth={false}\r\n                    id=\"arrears\"\r\n                    label=\"Arrears\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\"\r\n                    autoComplete=\"off\"\r\n                    value={arrears}\r\n                    onChange={(e) => dispatch(updateArrears(e.target.value))} />\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SalaryBreakdown\r\n","var ones = ['', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine'];\r\nvar tens = ['', '', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];\r\nvar teens = ['Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];\r\n\r\nfunction convert_millions(num) {\r\n    if (num >= 1000000) {\r\n        return convert_millions(Math.floor(num / 1000000)) + \" Million \" + convert_thousands(num % 1000000);\r\n    } else {\r\n        return convert_thousands(num);\r\n    }\r\n}\r\n\r\nfunction convert_thousands(num) {\r\n    if (num >= 1000) {\r\n        return convert_hundreds(Math.floor(num / 1000)) + \" Thousand \" + convert_hundreds(num % 1000);\r\n    } else {\r\n        return convert_hundreds(num);\r\n    }\r\n}\r\n\r\nfunction convert_hundreds(num) {\r\n    if (num > 99) {\r\n        return ones[Math.floor(num / 100)] + \" Hundred \" + convert_tens(num % 100);\r\n    } else {\r\n        return convert_tens(num);\r\n    }\r\n}\r\n\r\nfunction convert_tens(num) {\r\n    if (num < 10) return ones[num];\r\n    else if (num >= 10 && num < 20) return teens[num - 10];\r\n    else {\r\n        return tens[Math.floor(num / 10)] + \" \" + ones[num % 10];\r\n    }\r\n}\r\n\r\nexport default function convert(num) {\r\n    if (num === 0) return \"Zero\";\r\n    else return convert_millions(num);\r\n}","import React from 'react'\r\nimport { Card } from \"@material-ui/core\";\r\nimport convertToWords from '../convertToWords'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Total() {\r\n    const basic = useSelector(state => state.basic);\r\n    const conveyanceAllowance = useSelector(state => state.conveyanceAllowance);\r\n    const incentive = useSelector(state => state.incentive);\r\n    const incomeTax = useSelector(state => state.incomeTax);\r\n    const arrears = useSelector(state => state.arrears);\r\n\r\n    const totalEarnings = ((parseFloat(basic) || 0) + (parseFloat(conveyanceAllowance) || 0) + (parseFloat(incentive) || 0)).toFixed(2)\r\n    const totalDeductions = ((parseFloat(incomeTax) || 0) + (parseFloat(arrears) || 0)).toFixed(2)\r\n    return (\r\n        <Card className=\"card\">\r\n            <div className=\"horizontal\">\r\n                <div className=\"info\">\r\n                    <p className=\"title\">Total Earnings</p>\r\n                    <p className=\"value\">{totalEarnings}</p>\r\n                </div>\r\n\r\n                <div className=\"info\">\r\n                    <p className=\"title\">Total Deductions</p>\r\n                    <p className=\"value\">{totalDeductions}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <p className=\"title\">Net Payable</p>\r\n                <p className=\"value\">{totalEarnings - totalDeductions}</p>\r\n                <p className=\"subValue\">Rupees {convertToWords(totalEarnings - totalDeductions)} Only</p>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Total\r\n","export default __webpack_public_path__ + \"static/media/edigital_wolf_logo.a4b84cc4.png\";","import logo from '../assets/edigital_wolf_logo.png'\r\nimport './companyinfo.css'\r\nimport React from 'react'\r\n\r\nconst CompanyInfo = () => {\r\n    return (\r\n        <div className=\"companyInfo\">\r\n            <img src={logo} className=\"logo\" alt=\"Logo\" />\r\n            <div>\r\n                <h3 className=\"name\">EDigital Wolf</h3>\r\n                <p className=\"address\">Shri Siddhi  Above SBI Bank, Sasane Nagar <br />Hadapsar, Pune, Maharashtra 411028</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyInfo;\r\n","import React from 'react'\r\nimport './NavBar.css'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport { PictureAsPdf } from '@material-ui/icons';\r\nimport CompanyInfo from './CompanyInfo';\r\n\r\n\r\nfunction NavBar({ visible, isMobile, classes, onSaveClick }) {\r\n\r\n    return (\r\n        <div className={\"NavBar \" + (visible ? \"NavBar__normal\" : \"NavBar__hidden\")}>\r\n            <CompanyInfo />\r\n            {!isMobile && <Fab onClick={onSaveClick} color=\"primary\" variant=\"extended\">\r\n                <PictureAsPdf className={classes.extendedIcon} />  Save to PDF\r\n            </Fab>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import * as actionTypes from './actionTypes';\r\n\r\nfunction monthDays(date) {\r\n    var d = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n    return d.getDate();\r\n}\r\n\r\nconst today = new Date();\r\nconst daysMonth = monthDays(today);\r\nconst initial = {\r\n    date: today,\r\n    companyPan: 'IIHPS1460P',\r\n    employeeId: '',\r\n    dateOfJoining: today,\r\n    hasSeperated: false,\r\n    dateOfSeperation: today,\r\n    bankName: '',\r\n    bankAccountNo: '',\r\n    monthlyGross: '',\r\n    monthlyBasic: '',\r\n    daysMonth: daysMonth.toString(),\r\n    daysPayable: '',\r\n    pan: '',\r\n    opening: '',\r\n    earned: '',\r\n    availed: '',\r\n    closing: '',\r\n    basic: '',\r\n    conveyanceAllowance: '',\r\n    incentive: '',\r\n    incomeTax: '',\r\n    arrears: '',\r\n    employeeIds: []\r\n}\r\n\r\nexport default function reducer(state = initial, action) {\r\n    switch (action.type) {\r\n        case actionTypes.DATE: return { ...state, date: action.payload }\r\n        case actionTypes.COMPANY_PAN: return { ...state, companyPan: action.payload }\r\n        case actionTypes.EMPLOYEE_ID: return { ...state, employeeId: action.payload }\r\n        case actionTypes.DATE_OF_JOINING: return { ...state, dateOfJoining: action.payload }\r\n        case actionTypes.HAS_SEPERATED: return { ...state, hasSeperated: action.payload }\r\n        case actionTypes.DATE_OF_SEPERATION: return { ...state, dateOfSeperation: action.payload }\r\n        case actionTypes.BANK_NAME: return { ...state, bankName: action.payload }\r\n        case actionTypes.BANK_ACCOUNT_NO: return { ...state, bankAccountNo: action.payload }\r\n        case actionTypes.MONTHLY_GROSS: return { ...state, monthlyGross: action.payload }\r\n        case actionTypes.MONTHLY_BASIC: return { ...state, monthlyBasic: action.payload }\r\n        case actionTypes.DAYS_MONTH: return { ...state, daysMonth: action.payload }\r\n        case actionTypes.DAYS_PAYABLE: return { ...state, daysPayable: action.payload }\r\n        case actionTypes.PAN: return { ...state, pan: action.payload }\r\n        case actionTypes.OPENING: return { ...state, opening: action.payload }\r\n        case actionTypes.EARNED: return { ...state, earned: action.payload }\r\n        case actionTypes.AVAILED: return { ...state, availed: action.payload }\r\n        case actionTypes.CLOSING: return { ...state, closing: action.payload }\r\n        case actionTypes.BASIC: return { ...state, basic: action.payload }\r\n        case actionTypes.CONVEYANCE_ALLOWANCE: return { ...state, conveyanceAllowance: action.payload }\r\n        case actionTypes.INCENTIVE: return { ...state, incentive: action.payload }\r\n        case actionTypes.INCOME_TAX: return { ...state, incomeTax: action.payload }\r\n        case actionTypes.ARREARS: return { ...state, arrears: action.payload }\r\n        case actionTypes.EMPLOYEE_IDS: return { ...state, employeeIds: action.payload }\r\n\r\n        // Errors\r\n        case actionTypes.EMPLOYEE_ID_ERROR: return { ...state, employeeIdError: action.payload }\r\n        case actionTypes.COMPANY_PAN_ERROR: return { ...state, companyPanError: action.payload }\r\n        case actionTypes.PAN_ERROR: return { ...state, panError: action.payload }\r\n        case actionTypes.BANK_NAME_ERROR: return { ...state, bankNameError: action.payload }\r\n        case actionTypes.BANK_ACCOUNT_NO_ERROR: return { ...state, bankAccountNoError: action.payload }\r\n        case actionTypes.MONTHLY_BASIC_ERROR: return { ...state, monthlyBasicError: action.payload }\r\n        case actionTypes.MONTHLY_GROSS_ERROR: return { ...state, monthlyGrossError: action.payload }\r\n        case actionTypes.DAYS_MONTH_ERROR: return { ...state, daysMonthError: action.payload }\r\n        case actionTypes.DAYS_PAYABLE_ERROR: return { ...state, daysPayableError: action.payload }\r\n        case actionTypes.OPENING_ERROR: return { ...state, openingError: action.payload }\r\n        case actionTypes.EARNED_ERROR: return { ...state, earnedError: action.payload }\r\n        case actionTypes.AVAILED_ERROR: return { ...state, availedError: action.payload }\r\n        case actionTypes.CLOSING_ERROR: return { ...state, closingError: action.payload }\r\n        case actionTypes.BASIC_ERROR: return { ...state, basicError: action.payload }\r\n        case actionTypes.CONVEYANCE_ALLOWANCE_ERROR: return { ...state, conveyanceAllowanceError: action.payload }\r\n        case actionTypes.INCENTIVE_ERROR: return { ...state, incentiveError: action.payload }\r\n        case actionTypes.INCOME_TAX_ERROR: return { ...state, incomeTaxError: action.payload }\r\n        case actionTypes.ARREARS_ERROR: return { ...state, arrearsError: action.payload }\r\n        case actionTypes.EMPLOYEE_INFO: return { ...state, ...action.payload }\r\n        default: return { ...initial };\r\n    }\r\n}","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    +  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyA5Lg_fmUADzUPrPoQdoY4tsvG7B1ffmI4\",\r\n    authDomain: \"salaryslip-c4984.firebaseapp.com\",\r\n    projectId: \"salaryslip-c4984\",\r\n    storageBucket: \"salaryslip-c4984.appspot.com\",\r\n    messagingSenderId: \"578613490566\",\r\n    appId: \"1:578613490566:web:7f2ef6173209875ecc3207\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db };","import Docxtemplater from \"docxtemplater\";\r\nimport PizZip from \"pizzip\";\r\nimport PizZipUtils from \"pizzip/utils/index.js\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { format } from \"date-fns\";\r\nimport { db } from \"./firebase\";\r\nimport store from \"./store\";\r\nimport { updateState } from \"./actions\";\r\n\r\nfunction loadFile(url, callback) {\r\n    PizZipUtils.getBinaryContent(url, callback);\r\n}\r\n\r\nconst generateDoc = (data) => {\r\n    loadFile(\"https://ismail-creatvt.github.io/salaryslip/document/template.docx\", function (\r\n        error,\r\n        content\r\n    ) {\r\n        if (error) {\r\n            throw error;\r\n        }\r\n        var zip = new PizZip(content);\r\n        var doc = new Docxtemplater().loadZip(zip);\r\n        doc.setData(data);\r\n        try {\r\n            // render the document (replace all occurences of {first_name} by John, {last_name} by Doe, ...)\r\n            doc.render();\r\n        } catch (error) {\r\n            // The error thrown here contains additional information when logged with JSON.stringify (it contains a properties object containing all suberrors).\r\n            function replaceErrors(key, value) {\r\n                if (value instanceof Error) {\r\n                    return Object.getOwnPropertyNames(value).reduce(function (\r\n                        error,\r\n                        key\r\n                    ) {\r\n                        error[key] = value[key];\r\n                        return error;\r\n                    },\r\n                        {});\r\n                }\r\n                return value;\r\n            }\r\n            console.log(JSON.stringify({ error: error }, replaceErrors));\r\n\r\n            if (error.properties && error.properties.errors instanceof Array) {\r\n                const errorMessages = error.properties.errors\r\n                    .map(function (error) {\r\n                        return error.properties.explanation;\r\n                    })\r\n                    .join(\"\\n\");\r\n                console.log(\"errorMessages\", errorMessages);\r\n                // errorMessages is a humanly readable message looking like this :\r\n                // 'The tag beginning with \"foobar\" is unopened'\r\n            }\r\n            throw error;\r\n        }\r\n        var out = doc.getZip().generate({\r\n            type: \"blob\",\r\n            mimeType:\r\n                \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n        }); //Output the document using Data-URI\r\n\r\n        const fileName = `Salary_Slip_${data.employeeId}_${format(data.dateObject, \"MMM_yyyy\")}`\r\n\r\n        saveAs(out, fileName + \".docx\");\r\n        db.collection(\"employeeIds\").doc(data.employeeId).set({\r\n            pan: data.pan,\r\n            bankName: data.bankName,\r\n            bankAccountNo: data.bankAccountNo,\r\n            dateOfJoining: data.dateOfJoining,\r\n            dateOfSeperation: data.dateOfSeperation,\r\n            monthlyGross: data.monthlyGross,\r\n            monthlyBasic: data.monthlyBasic,\r\n            basic: data.basic,\r\n            conveyanceAllowance: data.conveyanceAllowance,\r\n            incentive: data.incentive,\r\n            incomeTax: data.incomeTax,\r\n            arrears: data.arrears\r\n        }).then(() => {\r\n            store.dispatch(updateState());\r\n            console.log(\"Document Written successfully\");\r\n        }).catch((error) => {\r\n            store.dispatch(updateState());\r\n            console.log(\"Error while writing document\");\r\n        });\r\n    })\r\n};\r\n\r\nexport default generateDoc;","import store from './store';\r\nimport {\r\n    updateEmployeeIdError,\r\n    updateCompanyPanError,\r\n    updatePanError,\r\n    updateBankNameError,\r\n    updateBankAccountNoError,\r\n    updateMonthlyBasicError,\r\n    updateMonthlyGrossError,\r\n    updateDaysMonthError,\r\n    updateDaysPayableError,\r\n    updateOpeningError,\r\n    updateEarnedError,\r\n    updateAvailedError,\r\n    updateClosingError,\r\n    updateBasicError,\r\n    updateConveyanceAllowanceError,\r\n    updateIncentiveError,\r\n    updateIncomeTaxError,\r\n    updateArrearsError\r\n} from './actions';\r\nimport generateDoc from './generateDoc';\r\nimport { format } from 'date-fns';\r\nimport convert from './convertToWords';\r\n\r\nconst onSaveClick = () => {\r\n    const state = store.getState();\r\n\r\n    if (state.companyPan.length === 0) {\r\n        store.dispatch(updateCompanyPanError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateCompanyPanError(false));\r\n\r\n    if (state.employeeId.length === 0) {\r\n        store.dispatch(updateEmployeeIdError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateEmployeeIdError(false));\r\n\r\n    if (state.bankName.length === 0) {\r\n        store.dispatch(updateBankNameError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateBankNameError(false));\r\n\r\n    if (state.bankAccountNo.length === 0) {\r\n        store.dispatch(updateBankAccountNoError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateBankAccountNoError(false));\r\n\r\n    if (state.daysMonth.length === 0) {\r\n        store.dispatch(updateDaysMonthError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateDaysMonthError(false));\r\n\r\n    if (state.daysPayable.length === 0) {\r\n        store.dispatch(updateDaysPayableError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateDaysPayableError(false));\r\n\r\n    if (state.monthlyBasic.length === 0) {\r\n        store.dispatch(updateMonthlyBasicError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateMonthlyBasicError(false));\r\n\r\n    if (state.monthlyGross.length === 0) {\r\n        store.dispatch(updateMonthlyGrossError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateMonthlyGrossError(false));\r\n\r\n\r\n    if (state.pan.length === 0) {\r\n        store.dispatch(updatePanError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updatePanError(false));\r\n\r\n\r\n    if (state.opening.length === 0) {\r\n        store.dispatch(updateOpeningError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateOpeningError(false));\r\n\r\n    if (state.earned.length === 0) {\r\n        store.dispatch(updateEarnedError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateEarnedError(false));\r\n\r\n    if (state.availed.length === 0) {\r\n        store.dispatch(updateAvailedError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateAvailedError(false));\r\n\r\n    if (state.closing.length === 0) {\r\n        store.dispatch(updateClosingError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateClosingError(false));\r\n\r\n    if (state.basic.length === 0) {\r\n        store.dispatch(updateBasicError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateBasicError(false));\r\n\r\n    if (state.conveyanceAllowance.length === 0) {\r\n        store.dispatch(updateConveyanceAllowanceError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateConveyanceAllowanceError(false));\r\n\r\n    if (state.incentive.length === 0) {\r\n        store.dispatch(updateIncentiveError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateIncentiveError(false));\r\n\r\n    if (state.incomeTax.length === 0) {\r\n        store.dispatch(updateIncomeTaxError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateIncomeTaxError(false));\r\n\r\n    if (state.arrears.length === 0) {\r\n        store.dispatch(updateArrearsError(true));\r\n        return;\r\n    }\r\n    store.dispatch(updateArrearsError(false));\r\n    const basic = (parseFloat(state.basic) || 0);\r\n    const conveyanceAllowance = (parseFloat(state.conveyanceAllowance) || 0);\r\n    const incentive = (parseFloat(state.incentive) || 0);\r\n    const incomeTax = (parseFloat(state.incomeTax) || 0);\r\n    const arrears = (parseFloat(state.arrears) || 0);\r\n    const totalEarnings = basic + conveyanceAllowance + incentive;\r\n    const totalDeductions = incomeTax + arrears;\r\n    const netPayable = totalEarnings - totalDeductions\r\n\r\n    const data = {\r\n        dateObject: state.date,\r\n        date: format(state.date, \"MMM yyyy\"),\r\n        companyPan: state.companyPan,\r\n        employeeId: state.employeeId,\r\n        dateOfJoining: format(state.dateOfJoining, \"dd MMM yyyy\"),\r\n        dateOfSeperation: state.hasSeperated ? format(state.dateOfSeperation, \"dd MMM yyyy\") : \"N/A\",\r\n        bankName: state.bankName,\r\n        bankAccountNo: state.bankAccountNo,\r\n        monthlyGross: (parseFloat(state.monthlyGross) || 0).toFixed(2),\r\n        monthlyBasic: (parseFloat(state.monthlyBasic) || 0).toFixed(2),\r\n        daysMonth: state.daysMonth,\r\n        daysPayable: state.daysPayable,\r\n        pan: state.pan,\r\n        opening: state.opening,\r\n        earned: state.earned,\r\n        availed: state.availed,\r\n        closing: state.closing,\r\n        basic: basic.toFixed(2),\r\n        conveyanceAllowance: conveyanceAllowance.toFixed(2),\r\n        incentive: incentive.toFixed(2),\r\n        incomeTax: incomeTax.toFixed(2),\r\n        arrears: arrears.toFixed(2),\r\n        totalEarnings: totalEarnings.toFixed(2),\r\n        totalDeductions: totalDeductions.toFixed(2),\r\n        netPayable: `${netPayable.toFixed(2)}\\n${convert(netPayable)}`\r\n    }\r\n    generateDoc(data);\r\n};\r\n\r\nexport default onSaveClick;","import './App.css';\nimport React, { Fragment, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport 'date-fns';\nimport EmployeeInfo from './components/EmployeeInfo';\nimport Header from './components/Header';\nimport PaymentInfo from './components/PaymentInfo';\nimport LeaveInfo from './components/LeaveInfo';\nimport SalaryBreakdown from './components/SalaryBreakdown';\nimport Total from './components/Total';\nimport NavBar from './components/NavBar';\nimport { makeStyles, useMediaQuery } from '@material-ui/core';\nimport Fab from '@material-ui/core/Fab'\nimport { PictureAsPdf } from '@material-ui/icons';\nimport onSaveClick from './save';\nimport { db } from './firebase';\nimport { useDispatch } from 'react-redux';\nimport { updateEmployeeIds } from './actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  let prevScrollPos = useRef(0)\n  const [visible, setVisible] = useState(true);\n\n  const isMobile = useMediaQuery(\"(max-width: 500px)\")\n\n  const dispatch = useDispatch();\n\n  const getEmployeeIds = () => {\n    db.collection(\"employeeIds\").onSnapshot((snapshot) => {\n      const ids = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        data: doc.data()\n      }));\n      dispatch(updateEmployeeIds(ids));\n    })\n  }\n\n  useEffect(() => {\n    getEmployeeIds();\n  }, [])\n\n  useLayoutEffect(() => {\n    const handleScroll = () => {\n      const current = window.pageYOffset;\n      setVisible(prevScrollPos.current > current);\n      prevScrollPos.current = current;\n    }\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [])\n\n\n  return (\n    <Fragment>\n      <div className=\"App\">\n        <NavBar visible={visible} isMobile={isMobile} classes={classes} onSaveClick={onSaveClick} />\n        <div className=\"Container\">\n          <Header />\n          <EmployeeInfo />\n          <PaymentInfo />\n          <LeaveInfo />\n          <SalaryBreakdown />\n          <Total />\n          {\n            isMobile && <Fab onClick={onSaveClick}\n              style={{ position: \"fixed\", bottom: \"20px\", zIndex: \"10\", right: \"20px\", transition: \"transform 300ms\", transform: visible ? \"translateY(0%)\" : \"translateY(150%)\" }} color=\"primary\" variant=\"extended\">\n              <PictureAsPdf className={classes.extendedIcon} />  Save to PDF\n            </Fab>\n          }\n\n        </div>\n      </div>\n    </Fragment>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}